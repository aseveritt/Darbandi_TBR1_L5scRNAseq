# Siavash scRNAseq

### Download files
```
#Get AWS session info and export variables -- check aws s3 ls works
mkdir ~/fastqc
cd ~/fastqc/
aws s3 cp s3://willsey-jeff-test/siavash_tbr1-L5-10x-single-cell-rnaseq/L5NULL_S2_L001_R2_001.fastq.gz ./
aws s3 cp s3://willsey-jeff-test/siavash_tbr1-L5-10x-single-cell-rnaseq/L5WT_S1_L001_R2_001.fastq.gz ./
```
### File structure 
	## I1 == sample I7 index
	## R1 == cell barcode and UMI
	## R2==transcript (SE, read length of 98; therefore set sjdbOverhang to 97)  
    
## ==On local==
1. Run ==Fastqc==
    - get initial look at data
    - installation
    ```
    ##on local 
    brew install fastqc
    
    ##on ec2
    wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.7.zip
    unzip fastqc_v0.11.7.zip
    rm fastqc_v0.11.7.zip
    cd FastQC/
    chmod 755 fastqc
    sudo ln -s /progs/FastQC/fastqc /bin/fastqc
    ```
    - run commands
    ```
    fastqc -t 8 L5NULL_S2_L001_R2_001.fastq.gz 
    fastqc -t 8 L5WT_S1_L001_R2_001.fastq.gz 
    ```
    - results: sequences we should trim (or let fall out in alignment) are AAGCAGTGGTATCAACGCAGAGTACATGGG and GTGTGTGTGTGTGTGTGTGTGTGTGTGTGT. Also, may want to evaluate rRNA filtering?
    - Adapters (sent by Siavash): (WT) TCTTAAAG, CGAGGCTC, AAGACGGA, and (NULL) GAAACCCT,TTTCTGTC,CCGTGTGA,AGCGAAAG
    
2. Run ==UMI-counts==
    - want to extract barcdoes and UMIs and add to read names (in R2 for downstream)
    - installation
    ```
    ##on local
    sudo pip3 install umi_tools
    ```
    - run commands
    ```
    umi_tools whitelist --stdin L5NULL_S2_L001_R1_001.fastq.gz \
                    --bc-pattern='(?P<cell_1>.{16})(?P<umi_1>.{10})' \
                    --extract-method=regex \
                    --log2stderr > whitelist_NULL.txt

    umi_tools whitelist --stdin L5WT_S1_L001_R1_001.fastq.gz \
                    --bc-pattern='(?P<cell_1>.{16})(?P<umi_1>.{10})' \
                    --extract-method=regex \
                    --log2stderr > whitelist_WT.txt
    ```
    - Here we are expecting 2326 samples based on cell ranger output
    ```
    1201 whitelist_NULL.txt  #expecting 1254
        - if you put "expecting 1000 cells -- it breaks
    55 whitelist_WT.txt      #expecting 1072
    265 whitelist_WT_2.txt #if you "expect" 1000 cells
    ## still something is wrong here 
    ```
    - We're having issues here. 
        - Cell Ranger [link](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/algorithms/overview) All barcodes whose total UMI counts exceed m/10 are called as cells. where m is maximum total UMI counts, taken as the 99th percentile
        - UMI-tools uses distribution of counts per cell barcode to identify the cut-off for 'true' UMIs (the 'knee')
        - maybe I should try the --expect-cells option (?) and --plot-prefix option to visualise the set of thresholds considered for defining cell barcodes
    ```
    umi_tools whitelist --stdin ../raw/L5WT_S1_L001_R1_001.fastq.gz \
                     --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \
                     --expect-cells=1000 \
                     --plot-prefix=expect_whitelist_WT \
                     --log2stderr > whitelist_WT_2.txt
    ```
    - Nope this is a larger issue. I wrote my own script to extract the cell barcode counts (my_whitelist.py). And the count sum doesn't match -- umi-counts must filter/use quality somehow
    ```
    zless ../raw/L5NULL\_S2\_L001\_R1\_001.fastq.gz | grep "@" | wc -l
    156934735 #wc -l R1_null
    awk '{print $2}' null.my_whitelist.txt | paste -sd+ - | bc
    156934735 #sum counts by me
    awk '{print $3}' whitelist_NULL.txt | paste -sd+ - | bc
    55417427 #sum of \*chosen\* umi-tools
    awk '{print $3,$4}' whitelist_NULL.txt | tr ',' '\\n' | tr ' ' '\\n' | paste -sd+ - | bc
    55980210 sum of all all
    
    zless ../raw/L5WT\_S1\_L001\_R1\_001.fastq.gz | grep "@" | wc -l
    184726085
    awk '{print $2}' wt.my_whitelist.txt | paste -sd+ - | bc
    184726085
    awk '{print $3}' whitelist\_WT\_2.txt | paste -sd+ - | bc
    14743228
    awk '{print $3,$4}' whitelist\_WT\_2.txt | tr ',' '\\n' | tr ' ' '\\n' | paste -sd+ - | bc
    15000021
    ```
    - Somehow the umi-counts are calculating the counts differently (correcting?); however, the top 985 are the same between umi/cell ranger/mine
    ```
    sort -k2 -n null.my\_whitelist.txt | tail -1000 | awk '{print $1}' > ~/Desktop/top\_1000\_null\_mine.txt
    sort -k3 -n whitelist\_NULL.txt | tail -1000 | awk '{print $1}' > ~/Desktop/top\_1000\_null\_umi.txt
    awk -F '-' '{print $1}' barcodes.tsv > ~/Desktop/top\_1254\_null_cell.txt

    comm -1 -2 <(sort top\_1000\_null\_mine.txt) <(sort top\_1000\_null\_umi.txt) | wc -l
    #998
    comm -1 -2 <(sort top\_1000\_null\_mine.txt) <(sort top\_1254\_null\_cell.txt) | wc -l
    #985
    comm -1 -2 <(sort top\_1000\_null\_umi.txt) <(sort top\_1254\_null\_cell.txt) | wc -l
    #985
    ```


    ```
    sort -k2 -n wt.my\_whitelist.txt | tail -1000 | awk '{print $1}' > ~/Desktop/top\_1000\_wt\_mine.txt
    sort -k3 -n whitelist\_WT\_2.txt | tail -1000 | awk '{print $1}' > ~/Desktop/top\_1000\_wt_umi.txt
    awk -F '-' '{print $1}' barcodes.tsv > ~/Desktop/top\_1072\_wt_cell.txt
    
    comm -1 -2 <(sort top\_1000\_wt\_mine.txt) <(sort top\_1000\_wt\_umi.txt) | wc -l
    #265
    comm -1 -2 <(sort top\_1000\_wt\_mine.txt) <(sort top\_1072\_wt\_cell.txt) | wc -l
    #945
    comm -1 -2 <(sort top\_1000\_wt\_umi.txt) <(sort top\_1072\_wt\_cell.txt) | wc -l
    #255
    ```

    - Ultimate decision : Cell-ranger gives a better result, so I will use those cells. However, we may want to come up with a count version of our own. 
        - see directory /Users/AEveritt/projects/siavash\_scRNAseq/umi-counts/temp_files
        

    ```
    awk -F '-' '{print $1}' ../cell\_ranger/outputwt/outs/mm10/barcodes.tsv > wt.ranger\_whitelist.txt
    awk -F '-' '{print $1}' ../cell\_ranger/outputnull/outs/mm10/barcodes.tsv > null.ranger\_whitelist.txt

    umi_tools extract \
        --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \
        --stdin ../raw/L5NULL_S2_L001_R1_001.fastq.gz \
        --stdout L5NULL_S2_L001_R1_001.extracted.fastq.gz \
        --read2-in ../raw/L5NULL_S2_L001_R2_001.fastq.gz \
        --read2-out=L5NULL_S2_L001_R2_001_extracted.fastq.gz \
        --filter-cell-barcode \
        --whitelist=null.ranger.whitelist.txt
    
    umi_tools extract \
        --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \
        --stdin ../raw/L5WT_S1_L001_R1_001.fastq.gz \
        --stdout L5WT_S1_L001_R1_001.extracted.fastq.gz \
        --read2-in ../raw/L5WT_S1_L001_R2_001.fastq.gz \
        --read2-out=L5WT_S1_L001_R2_001_extracted.fastq.gz \
        --filter-cell-barcode \
        --whitelist=wt.ranger.whitelist.txt
    ```
    - **FIXME that took absolutely forever, I should see about moving this to an instance**
3. scp to ec2 instance
    ```
    scp -i ~/.ssh/amanda-key.pem L5NULL\_S2\_L001\_R2\_001\_extracted.fastq.gz centos@ec2-204-236-192-134.compute-1.amazonaws.com:/home/centos/siavash\_scRNAseq/fastq/
    scp -i ~/.ssh/amanda-key.pem L5WT_S1_L001_R2_001_extracted.fastq.gz centos@ec2-204-236-192-134.compute-1.amazonaws.com:/home/centos/siavash_scRNAseq/fastq/
    ```
    - This filters out reads that do not match one of the accepted cell barcodes **THIS OKAY?- I can take out this option if not** 



## ==On AWS==
4. Run ==STAR==
    - This was run on an m4.4xlarge EC2 instance (16 vCPUs, 64GiB memory) (Jeff-02-14-18 AMI -- Amanda-2-20 ec2)
    - ssh -i ~/.ssh/amanda-key.pem centos@ec2-34-230-73-251.compute-1.amazonaws.com
    - To get mm10 reference:
    ```
    cd ../../../reference/genomes/
    wget ftp.ensembl.org/pub/release-75/fasta/mus_musculus/dna/Mus_musculus.GRCm38.75.dna_sm.primary_assembly.fa.gz
    gunzip Mus_musculus.GRCm38.75.dna_sm.primary_assembly.fa.gz
    wget ftp.ensembl.org/pub/release-91/gtf/mus_musculus/Mus_musculus.GRCm38.91.gtf.gz
    gunzip Mus_musculus.GRCm38.91.gtf.gz
    ```
    - To build reference index for STAR:
    ```
    #Check for seq length
    zless L5NULL_S2_L001_R2_001.fastq.gz | head -2 | tail -1 | awk '{print length}'
    #98
    zless L5WT_S1_L001_R2_001.fastq.gz | head -2 | tail -1 | awk '{print length}'
    #98
    
    sudo /progs/STAR-2.5.4b/bin/Linux_x86_64/STAR --genomeDir /reference/star/mm10/ --genomeFastaFiles /reference/genomes/Mus_musculus.GRCm38.75.dna_sm.primary_assembly.fa --runMode genomeGenerate --runThreadN 40 --sjdbOverhang 97 --sjdbGTFfile /reference/genomes/Mus_musculus.GRCm38.91.gtf

    #load a shared copy of STAR genome/indexes into memory 
    sudo /progs/STAR-2.5.4b/bin/Linux_x86_64/STAR --genomeDir /reference/star/mm10/ --genomeLoad LoadAndExit
    ```
    - Run commands
    ```
    sudo /progs/STAR-2.5.4b/bin/Linux_x86_64/STAR \
    --readFilesCommand 'zcat -f' --runThreadN 8 \
    --genomeDir /reference/star/mm10/ \
    --readFilesIn ~/siavash_scRNAseq/fastq/L5NULL_S2_L001_R2_001_extracted.fastq.gz \
    --genomeLoad LoadAndKeep \
    --outFileNamePrefix ~/siavash_scRNAseq/star/null_extracted/NULL_extracted_ \
    --limitBAMsortRAM 10000000000 \
    --outSAMtype BAM SortedByCoordinate \
    --quantMode GeneCounts

    sudo /progs/STAR-2.5.4b/bin/Linux_x86_64/STAR \
    --readFilesCommand 'zcat -f' --runThreadN 8 \
    --genomeDir /reference/star/mm10/ \
    --readFilesIn ~/siavash_scRNAseq/fastq/L5WT_S1_L001_R2_001_extracted.fastq.gz \
    --genomeLoad LoadAndKeep \
    --outFileNamePrefix ~/siavash_scRNAseq/star/WT_extracted_ \
    --limitBAMsortRAM 10000000000 \
    --outSAMtype BAM SortedByCoordinate \
    --quantMode GeneCounts
    ```
    - Difference between alignment before and after filtering out those missing cell barcodes
        - NULL: 
            - 156934735 reads -> 86953463
            - 108155730 unique mapped (68%) -> 62749457 (72%)
            - 

    
## ==On local?==
5. scp files to local
```
scp -i ~/.ssh/amanda-key.pem centos@ec2-34-230-73-251.compute-1.amazonaws.com:/home/centos/fastq/L5WT_S1_L001_R2_001_fastqc.html ./
scp -i ~/.ssh/amanda-key.pem centos@ec2-34-230-73-251.compute-1.amazonaws.com:/home/centos/fastq/L5WT_S1_L001_R2_001_fastqc.html ./
scp -i ~/.ssh/amanda-key.pem centos@ec2-34-230-73-251.compute-1.amazonaws.com:/home/centos/fastq/L5WT_S1_L001_R2_001_fastqc.html ./
```

6. Run ==featureCounts==
    - want to assign reads to genes
    - installation
    ```
    #on ec2
    wget https://sourceforge.net/projects/subread/files/subread-1.6.0/subread-1.6.0-source.tar.gz/download
    
    #on local is the same
    ```
    
    ```
    featureCounts -a geneset.gtf \
              -o WT_gene_assigned \
              -R BAM WT_aligned.sortedByCoord.bam \
              -T 4
    samtools sort AWT_aligned.sortedByCoord.bam.featureCounts.bam -o WT_assigned_sorted.bam
    samtools index WT_assigned_sorted.bam
    
    featureCounts -a geneset.gtf \
              -o NULL_gene_assigned \
              -R BAM NULL_aligned.sortedByCoord.bam \
              -T 4
    samtools sort NULL_aligned.sortedByCoord.bam.featureCounts.bam -o NULL_assigned_sorted.bam
    samtools index NULL_assigned_sorted.bam
    ```
    

7. Run ==UMI-tools==
    - Generate the UMIs aligned to each gene in each cell to find the number of distinct, error corrected UMIs mapping to each gene
```
umi_tools count --per-gene \
        --gene-tag=XT --per-cell \
        -I NULL_assigned_sorted.bam \
        -S NULL_counts.tsv.gz

umi_tools count --per-gene \
        --gene-tag=XT --per-cell \
        -I WT_assigned_sorted.bam \
        -S WT_counts.tsv.gz
```
    
    
    
    
# Garbage dump
#zUMIs??
p=`/path/to/zUMIs/`
bash $p/zUMIs-master.sh -f $p/siavash_scRNAseq/READ1 -r $p/siavash_scRNAseq/READ2 -n wt_zumi -g $p/reference/mm10/ -a $p/reference/GRCh38.84.chr22.gtf -c 1-16 -m 17-26 -l 98 -p 8 -b 1000 -x "--limitBAMsortRAM 10000000000 --quantMode GeneCounts" -o $p/my_zUMI_output/



STAR --genomeDir "STARidx" --runThreadN "p" --readFilesCommand zcat --sjdbGTFfile "gtf" --outFileNamePrefix "sample." --outSAMtype BAM Unsorted --outSAMmultNmax 1 --outFilterMultimapNmax 50 --outSAMunmapped Within --sjdbOverhang "readlength - 1" --twopassMode Basic --readFilesIn "cdnaread.filtered.fastq.gz"

-x "--limitBAMsortRAM 10000000000 --quantMode GeneCounts"